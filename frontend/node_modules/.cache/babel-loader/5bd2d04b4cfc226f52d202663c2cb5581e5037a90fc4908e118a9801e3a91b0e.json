{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\projetos2025\\\\api_bling_vendas\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useApi } from '../hooks/useApi';\nimport { dashboardAPI, ordersAPI } from '../services/api';\nimport MetricsCard from '../components/MetricsCard';\nimport SalesChart from '../components/SalesChart';\nimport OrdersTable from '../components/OrdersTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _dashboardData$produc5, _dashboardData$catego;\n  const {\n    data: dashboardData,\n    loading: dashboardLoading,\n    error: dashboardError\n  } = useApi(() => dashboardAPI.getSummary());\n  const {\n    data: ordersData,\n    loading: ordersLoading,\n    error: ordersError\n  } = useApi(() => ordersAPI.getAll({\n    limit: 5\n  }));\n\n  // Calcula métricas dos dados\n  const calculateMetrics = () => {\n    var _dashboardData$produc3, _dashboardData$produc4;\n    // Usa dados mock se houver erro na API\n    if (ordersError || !ordersData) {\n      var _dashboardData$produc, _dashboardData$produc2;\n      return {\n        totalOrders: 0,\n        totalSales: 0,\n        productsCount: (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$produc = dashboardData.products) === null || _dashboardData$produc === void 0 ? void 0 : (_dashboardData$produc2 = _dashboardData$produc.recent) === null || _dashboardData$produc2 === void 0 ? void 0 : _dashboardData$produc2.length) || 0,\n        avgOrderValue: 0\n      };\n    }\n    const orders = ordersData.data || [];\n    const totalOrders = orders.length;\n    const totalSales = orders.reduce((sum, order) => sum + (order.total || 0), 0);\n    const productsCount = (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$produc3 = dashboardData.products) === null || _dashboardData$produc3 === void 0 ? void 0 : (_dashboardData$produc4 = _dashboardData$produc3.recent) === null || _dashboardData$produc4 === void 0 ? void 0 : _dashboardData$produc4.length) || 0;\n    return {\n      totalOrders,\n      totalSales,\n      productsCount,\n      avgOrderValue: totalOrders > 0 ? totalSales / totalOrders : 0\n    };\n  };\n  const metrics = calculateMetrics();\n\n  // Gera dados do gráfico baseado nos pedidos ou dados mock\n  const generateChartData = () => {\n    if (ordersError || !(ordersData !== null && ordersData !== void 0 && ordersData.data)) {\n      // Retorna dados mock em caso de erro\n      return [{\n        data: '25/08',\n        vendas: 1500\n      }, {\n        data: '26/08',\n        vendas: 2200\n      }, {\n        data: '27/08',\n        vendas: 1800\n      }, {\n        data: '28/08',\n        vendas: 2500\n      }, {\n        data: '29/08',\n        vendas: 3200\n      }];\n    }\n    const orders = ordersData.data;\n    const salesByDate = {};\n    orders.forEach(order => {\n      const date = order.dataEmissao || order.data;\n      if (date) {\n        const formattedDate = new Date(date).toLocaleDateString('pt-BR', {\n          day: '2-digit',\n          month: '2-digit'\n        });\n        salesByDate[formattedDate] = (salesByDate[formattedDate] || 0) + (order.total || 0);\n      }\n    });\n    return Object.entries(salesByDate).map(([data, vendas]) => ({\n      data,\n      vendas\n    }));\n  };\n  const chartData = generateChartData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-20\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), (dashboardError || ordersError) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Aviso:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \" Alguns dados podem n\\xE3o estar atualizados devido a problemas na conex\\xE3o com o Bling ERP.\", ordersError && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this), ordersError && `Pedidos: ${ordersError}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Total de Vendas\",\n        value: metrics.totalSales || 0,\n        icon: \"\\uD83D\\uDCB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Pedidos\",\n        value: metrics.totalOrders || 0,\n        icon: \"\\uD83D\\uDCCB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Produtos\",\n        value: metrics.productsCount || 0,\n        icon: \"\\uD83D\\uDCE6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Ticket M\\xE9dio\",\n        value: metrics.avgOrderValue || 0,\n        icon: \"\\uD83D\\uDCCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalesChart, {\n      data: chartData,\n      loading: dashboardLoading || ordersLoading,\n      title: ordersError ? \"Vendas (Dados de Exemplo)\" : \"Vendas por Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrdersTable, {\n      orders: (ordersData === null || ordersData === void 0 ? void 0 : ordersData.data) || [],\n      loading: ordersLoading,\n      title: ordersError ? \"Pedidos Recentes (Indisponível)\" : \"Pedidos Recentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-20 p-20\",\n      style: {\n        backgroundColor: 'var(--card-background)',\n        borderRadius: '8px',\n        border: '1px solid var(--border-color)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"Status da Integra\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          color: 'var(--text-secondary)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dashboard: \", dashboardError ? '❌ Erro' : '✅ OK']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pedidos: \", ordersError ? '❌ Erro' : '✅ OK']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), dashboardData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Produtos: \", (_dashboardData$produc5 = dashboardData.products) !== null && _dashboardData$produc5 !== void 0 && _dashboardData$produc5.error ? '❌ Erro' : '✅ OK']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Categorias: \", (_dashboardData$catego = dashboardData.categories) !== null && _dashboardData$catego !== void 0 && _dashboardData$catego.error ? '❌ Erro' : '✅ OK']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"U7veR2cEnNfIv7dr/zRczjdNwgg=\", false, function () {\n  return [useApi, useApi];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useApi","dashboardAPI","ordersAPI","MetricsCard","SalesChart","OrdersTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","_dashboardData$produc5","_dashboardData$catego","data","dashboardData","loading","dashboardLoading","error","dashboardError","getSummary","ordersData","ordersLoading","ordersError","getAll","limit","calculateMetrics","_dashboardData$produc3","_dashboardData$produc4","_dashboardData$produc","_dashboardData$produc2","totalOrders","totalSales","productsCount","products","recent","length","avgOrderValue","orders","reduce","sum","order","total","metrics","generateChartData","vendas","salesByDate","forEach","date","dataEmissao","formattedDate","Date","toLocaleDateString","day","month","Object","entries","map","chartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","icon","style","backgroundColor","borderRadius","border","marginBottom","fontSize","color","categories","_c","$RefreshReg$"],"sources":["C:/Users/eduar/projetos2025/api_bling_vendas/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useApi } from '../hooks/useApi';\r\nimport { dashboardAPI, ordersAPI } from '../services/api';\r\nimport MetricsCard from '../components/MetricsCard';\r\nimport SalesChart from '../components/SalesChart';\r\nimport OrdersTable from '../components/OrdersTable';\r\n\r\nconst Dashboard = () => {\r\n  const { data: dashboardData, loading: dashboardLoading, error: dashboardError } = useApi(() => dashboardAPI.getSummary());\r\n  const { data: ordersData, loading: ordersLoading, error: ordersError } = useApi(() => ordersAPI.getAll({ limit: 5 }));\r\n\r\n  // Calcula métricas dos dados\r\n  const calculateMetrics = () => {\r\n    // Usa dados mock se houver erro na API\r\n    if (ordersError || !ordersData) {\r\n      return {\r\n        totalOrders: 0,\r\n        totalSales: 0,\r\n        productsCount: dashboardData?.products?.recent?.length || 0,\r\n        avgOrderValue: 0\r\n      };\r\n    }\r\n\r\n    const orders = ordersData.data || [];\r\n    const totalOrders = orders.length;\r\n    const totalSales = orders.reduce((sum, order) => sum + (order.total || 0), 0);\r\n    const productsCount = dashboardData?.products?.recent?.length || 0;\r\n\r\n    return {\r\n      totalOrders,\r\n      totalSales,\r\n      productsCount,\r\n      avgOrderValue: totalOrders > 0 ? totalSales / totalOrders : 0\r\n    };\r\n  };\r\n\r\n  const metrics = calculateMetrics();\r\n\r\n  // Gera dados do gráfico baseado nos pedidos ou dados mock\r\n  const generateChartData = () => {\r\n    if (ordersError || !ordersData?.data) {\r\n      // Retorna dados mock em caso de erro\r\n      return [\r\n        { data: '25/08', vendas: 1500 },\r\n        { data: '26/08', vendas: 2200 },\r\n        { data: '27/08', vendas: 1800 },\r\n        { data: '28/08', vendas: 2500 },\r\n        { data: '29/08', vendas: 3200 },\r\n      ];\r\n    }\r\n\r\n    const orders = ordersData.data;\r\n    const salesByDate = {};\r\n\r\n    orders.forEach(order => {\r\n      const date = order.dataEmissao || order.data;\r\n      if (date) {\r\n        const formattedDate = new Date(date).toLocaleDateString('pt-BR', { \r\n          day: '2-digit', \r\n          month: '2-digit' \r\n        });\r\n        salesByDate[formattedDate] = (salesByDate[formattedDate] || 0) + (order.total || 0);\r\n      }\r\n    });\r\n\r\n    return Object.entries(salesByDate).map(([data, vendas]) => ({\r\n      data,\r\n      vendas\r\n    }));\r\n  };\r\n\r\n  const chartData = generateChartData();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"mb-20\">Dashboard</h2>\r\n      \r\n      {/* Mostrar erros se houver */}\r\n      {(dashboardError || ordersError) && (\r\n        <div className=\"error mb-20\">\r\n          <strong>Aviso:</strong> Alguns dados podem não estar atualizados devido a problemas na conexão com o Bling ERP.\r\n          {ordersError && <br />}\r\n          {ordersError && `Pedidos: ${ordersError}`}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Cards de Métricas */}\r\n      <div className=\"metrics-grid\">\r\n        <MetricsCard\r\n          title=\"Total de Vendas\"\r\n          value={metrics.totalSales || 0}\r\n          icon=\"💰\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Pedidos\"\r\n          value={metrics.totalOrders || 0}\r\n          icon=\"📋\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Produtos\"\r\n          value={metrics.productsCount || 0}\r\n          icon=\"📦\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Ticket Médio\"\r\n          value={metrics.avgOrderValue || 0}\r\n          icon=\"📊\"\r\n        />\r\n      </div>\r\n\r\n      {/* Gráfico de Vendas */}\r\n      <SalesChart \r\n        data={chartData}\r\n        loading={dashboardLoading || ordersLoading}\r\n        title={ordersError ? \"Vendas (Dados de Exemplo)\" : \"Vendas por Data\"}\r\n      />\r\n\r\n      {/* Tabela de Pedidos Recentes */}\r\n      <OrdersTable\r\n        orders={ordersData?.data || []}\r\n        loading={ordersLoading}\r\n        title={ordersError ? \"Pedidos Recentes (Indisponível)\" : \"Pedidos Recentes\"}\r\n      />\r\n\r\n      {/* Status da Integração */}\r\n      <div className=\"mt-20 p-20\" style={{ backgroundColor: 'var(--card-background)', borderRadius: '8px', border: '1px solid var(--border-color)' }}>\r\n        <h3 style={{ marginBottom: '10px' }}>Status da Integração</h3>\r\n        <div style={{ fontSize: '14px', color: 'var(--text-secondary)' }}>\r\n          <p>Dashboard: {dashboardError ? '❌ Erro' : '✅ OK'}</p>\r\n          <p>Pedidos: {ordersError ? '❌ Erro' : '✅ OK'}</p>\r\n          {dashboardData && (\r\n            <>\r\n              <p>Produtos: {dashboardData.products?.error ? '❌ Erro' : '✅ OK'}</p>\r\n              <p>Categorias: {dashboardData.categories?.error ? '❌ Erro' : '✅ OK'}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}