{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\projetos2025\\\\api_bling_vendas\\\\frontend\\\\src\\\\components\\\\SalesChart.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesChart = ({\n  data,\n  loading,\n  title = \"Vendas dos Últimos 30 Dias\"\n}) => {\n  // Dados mock caso não tenha dados reais\n  const mockData = [{\n    data: '01/08',\n    vendas: 4000\n  }, {\n    data: '02/08',\n    vendas: 3000\n  }, {\n    data: '03/08',\n    vendas: 2000\n  }, {\n    data: '04/08',\n    vendas: 2780\n  }, {\n    data: '05/08',\n    vendas: 1890\n  }, {\n    data: '06/08',\n    vendas: 2390\n  }, {\n    data: '07/08',\n    vendas: 3490\n  }];\n  const chartData = data && data.length > 0 ? data : mockData;\n  const formatCurrency = value => {\n    if (!value || isNaN(value)) return 'R$ 0,00';\n    return Number(value).toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n  };\n\n  // Custom tooltip component para evitar erro do formatter\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontWeight: 'bold'\n          },\n          children: `Data: ${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            color: '#2563eb'\n          },\n          children: `Vendas: ${formatCurrency(payload[0].value)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chart-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Carregando gr\\xE1fico...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: value => formatCurrency(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"vendas\",\n          stroke: \"#2563eb\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#2563eb'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = SalesChart;\nexport default SalesChart;\nvar _c;\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","SalesChart","data","loading","title","mockData","vendas","chartData","length","formatCurrency","value","isNaN","Number","toLocaleString","style","currency","CustomTooltip","active","payload","label","backgroundColor","padding","border","borderRadius","boxShadow","children","margin","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","className","width","height","strokeDasharray","dataKey","tickFormatter","content","type","stroke","strokeWidth","dot","fill","_c","$RefreshReg$"],"sources":["C:/Users/eduar/projetos2025/api_bling_vendas/frontend/src/components/SalesChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst SalesChart = ({ data, loading, title = \"Vendas dos Últimos 30 Dias\" }) => {\r\n  // Dados mock caso não tenha dados reais\r\n  const mockData = [\r\n    { data: '01/08', vendas: 4000 },\r\n    { data: '02/08', vendas: 3000 },\r\n    { data: '03/08', vendas: 2000 },\r\n    { data: '04/08', vendas: 2780 },\r\n    { data: '05/08', vendas: 1890 },\r\n    { data: '06/08', vendas: 2390 },\r\n    { data: '07/08', vendas: 3490 },\r\n  ];\r\n\r\n  const chartData = data && data.length > 0 ? data : mockData;\r\n\r\n  const formatCurrency = (value) => {\r\n    if (!value || isNaN(value)) return 'R$ 0,00';\r\n    return Number(value).toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL'\r\n    });\r\n  };\r\n\r\n  // Custom tooltip component para evitar erro do formatter\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div style={{\r\n          backgroundColor: 'white',\r\n          padding: '10px',\r\n          border: '1px solid #ccc',\r\n          borderRadius: '4px',\r\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <p style={{ margin: 0, fontWeight: 'bold' }}>{`Data: ${label}`}</p>\r\n          <p style={{ margin: 0, color: '#2563eb' }}>\r\n            {`Vendas: ${formatCurrency(payload[0].value)}`}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <h3 className=\"chart-title\">{title}</h3>\r\n        <div className=\"loading\">Carregando gráfico...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h3 className=\"chart-title\">{title}</h3>\r\n      \r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"data\" />\r\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"vendas\" \r\n            stroke=\"#2563eb\" \r\n            strokeWidth={2}\r\n            dot={{ fill: '#2563eb' }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}