{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\projetos2025\\\\api_bling_vendas\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useApi } from '../hooks/useApi';\nimport { dashboardAPI, ordersAPI } from '../services/api';\nimport MetricsCard from '../components/MetricsCard';\nimport SalesChart from '../components/SalesChart';\nimport OrdersTable from '../components/OrdersTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _dashboardData$produc3, _dashboardData$orders, _dashboardData$catego;\n  const {\n    data: dashboardData,\n    loading: dashboardLoading\n  } = useApi(() => dashboardAPI.getSummary());\n  const {\n    data: ordersData,\n    loading: ordersLoading\n  } = useApi(() => ordersAPI.getAll({\n    limit: 5\n  }));\n\n  // Calcula métricas dos dados\n  const calculateMetrics = () => {\n    var _dashboardData$produc, _dashboardData$produc2;\n    if (!dashboardData || !ordersData) return {};\n    const orders = ordersData.data || [];\n    const totalOrders = orders.length;\n    const totalSales = orders.reduce((sum, order) => sum + (order.total || 0), 0);\n    const productsCount = ((_dashboardData$produc = dashboardData.products) === null || _dashboardData$produc === void 0 ? void 0 : (_dashboardData$produc2 = _dashboardData$produc.recent) === null || _dashboardData$produc2 === void 0 ? void 0 : _dashboardData$produc2.length) || 0;\n    return {\n      totalOrders,\n      totalSales,\n      productsCount,\n      avgOrderValue: totalOrders > 0 ? totalSales / totalOrders : 0\n    };\n  };\n  const metrics = calculateMetrics();\n\n  // Gera dados do gráfico baseado nos pedidos\n  const generateChartData = () => {\n    if (!(ordersData !== null && ordersData !== void 0 && ordersData.data)) return [];\n    const orders = ordersData.data;\n    const salesByDate = {};\n    orders.forEach(order => {\n      const date = order.dataEmissao || order.data;\n      if (date) {\n        const formattedDate = new Date(date).toLocaleDateString('pt-BR', {\n          day: '2-digit',\n          month: '2-digit'\n        });\n        salesByDate[formattedDate] = (salesByDate[formattedDate] || 0) + (order.total || 0);\n      }\n    });\n    return Object.entries(salesByDate).map(([data, vendas]) => ({\n      data,\n      vendas\n    }));\n  };\n  const chartData = generateChartData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-20\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Total de Vendas\",\n        value: metrics.totalSales || 0,\n        icon: \"\\uD83D\\uDCB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Pedidos\",\n        value: metrics.totalOrders || 0,\n        icon: \"\\uD83D\\uDCCB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Produtos\",\n        value: metrics.productsCount || 0,\n        icon: \"\\uD83D\\uDCE6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricsCard, {\n        title: \"Ticket M\\xE9dio\",\n        value: metrics.avgOrderValue || 0,\n        icon: \"\\uD83D\\uDCCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalesChart, {\n      data: chartData,\n      loading: dashboardLoading || ordersLoading,\n      title: \"Vendas por Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrdersTable, {\n      orders: (ordersData === null || ordersData === void 0 ? void 0 : ordersData.data) || [],\n      loading: ordersLoading,\n      title: \"Pedidos Recentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), dashboardData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-20 p-20\",\n      style: {\n        backgroundColor: 'var(--card-background)',\n        borderRadius: '8px',\n        border: '1px solid var(--border-color)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"Status da Integra\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          color: 'var(--text-secondary)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Produtos: \", (_dashboardData$produc3 = dashboardData.products) !== null && _dashboardData$produc3 !== void 0 && _dashboardData$produc3.error ? '❌ Erro' : '✅ OK']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pedidos: \", (_dashboardData$orders = dashboardData.orders) !== null && _dashboardData$orders !== void 0 && _dashboardData$orders.error ? '❌ Erro' : '✅ OK']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Categorias: \", (_dashboardData$catego = dashboardData.categories) !== null && _dashboardData$catego !== void 0 && _dashboardData$catego.error ? '❌ Erro' : '✅ OK']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XEF1P+xO6Dmqv5D70g3M9Q1ionI=\", false, function () {\n  return [useApi, useApi];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useApi","dashboardAPI","ordersAPI","MetricsCard","SalesChart","OrdersTable","jsxDEV","_jsxDEV","Dashboard","_s","_dashboardData$produc3","_dashboardData$orders","_dashboardData$catego","data","dashboardData","loading","dashboardLoading","getSummary","ordersData","ordersLoading","getAll","limit","calculateMetrics","_dashboardData$produc","_dashboardData$produc2","orders","totalOrders","length","totalSales","reduce","sum","order","total","productsCount","products","recent","avgOrderValue","metrics","generateChartData","salesByDate","forEach","date","dataEmissao","formattedDate","Date","toLocaleDateString","day","month","Object","entries","map","vendas","chartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","icon","style","backgroundColor","borderRadius","border","marginBottom","fontSize","color","error","categories","_c","$RefreshReg$"],"sources":["C:/Users/eduar/projetos2025/api_bling_vendas/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useApi } from '../hooks/useApi';\r\nimport { dashboardAPI, ordersAPI } from '../services/api';\r\nimport MetricsCard from '../components/MetricsCard';\r\nimport SalesChart from '../components/SalesChart';\r\nimport OrdersTable from '../components/OrdersTable';\r\n\r\nconst Dashboard = () => {\r\n  const { data: dashboardData, loading: dashboardLoading } = useApi(() => dashboardAPI.getSummary());\r\n  const { data: ordersData, loading: ordersLoading } = useApi(() => ordersAPI.getAll({ limit: 5 }));\r\n\r\n  // Calcula métricas dos dados\r\n  const calculateMetrics = () => {\r\n    if (!dashboardData || !ordersData) return {};\r\n\r\n    const orders = ordersData.data || [];\r\n    const totalOrders = orders.length;\r\n    const totalSales = orders.reduce((sum, order) => sum + (order.total || 0), 0);\r\n    const productsCount = dashboardData.products?.recent?.length || 0;\r\n\r\n    return {\r\n      totalOrders,\r\n      totalSales,\r\n      productsCount,\r\n      avgOrderValue: totalOrders > 0 ? totalSales / totalOrders : 0\r\n    };\r\n  };\r\n\r\n  const metrics = calculateMetrics();\r\n\r\n  // Gera dados do gráfico baseado nos pedidos\r\n  const generateChartData = () => {\r\n    if (!ordersData?.data) return [];\r\n\r\n    const orders = ordersData.data;\r\n    const salesByDate = {};\r\n\r\n    orders.forEach(order => {\r\n      const date = order.dataEmissao || order.data;\r\n      if (date) {\r\n        const formattedDate = new Date(date).toLocaleDateString('pt-BR', { \r\n          day: '2-digit', \r\n          month: '2-digit' \r\n        });\r\n        salesByDate[formattedDate] = (salesByDate[formattedDate] || 0) + (order.total || 0);\r\n      }\r\n    });\r\n\r\n    return Object.entries(salesByDate).map(([data, vendas]) => ({\r\n      data,\r\n      vendas\r\n    }));\r\n  };\r\n\r\n  const chartData = generateChartData();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"mb-20\">Dashboard</h2>\r\n      \r\n      {/* Cards de Métricas */}\r\n      <div className=\"metrics-grid\">\r\n        <MetricsCard\r\n          title=\"Total de Vendas\"\r\n          value={metrics.totalSales || 0}\r\n          icon=\"💰\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Pedidos\"\r\n          value={metrics.totalOrders || 0}\r\n          icon=\"📋\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Produtos\"\r\n          value={metrics.productsCount || 0}\r\n          icon=\"📦\"\r\n        />\r\n        <MetricsCard\r\n          title=\"Ticket Médio\"\r\n          value={metrics.avgOrderValue || 0}\r\n          icon=\"📊\"\r\n        />\r\n      </div>\r\n\r\n      {/* Gráfico de Vendas */}\r\n      <SalesChart \r\n        data={chartData}\r\n        loading={dashboardLoading || ordersLoading}\r\n        title=\"Vendas por Data\"\r\n      />\r\n\r\n      {/* Tabela de Pedidos Recentes */}\r\n      <OrdersTable\r\n        orders={ordersData?.data || []}\r\n        loading={ordersLoading}\r\n        title=\"Pedidos Recentes\"\r\n      />\r\n\r\n      {/* Status da Integração */}\r\n      {dashboardData && (\r\n        <div className=\"mt-20 p-20\" style={{ backgroundColor: 'var(--card-background)', borderRadius: '8px', border: '1px solid var(--border-color)' }}>\r\n          <h3 style={{ marginBottom: '10px' }}>Status da Integração</h3>\r\n          <div style={{ fontSize: '14px', color: 'var(--text-secondary)' }}>\r\n            <p>Produtos: {dashboardData.products?.error ? '❌ Erro' : '✅ OK'}</p>\r\n            <p>Pedidos: {dashboardData.orders?.error ? '❌ Erro' : '✅ OK'}</p>\r\n            <p>Categorias: {dashboardData.categories?.error ? '❌ Erro' : '✅ OK'}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}